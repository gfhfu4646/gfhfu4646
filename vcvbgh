import argparse
import logging
import multiprocessing
from functools import partial
from pathlib import Path

import faiss

from feature_retrieval import (
    train_index,
    FaissIVFFlatTrainableFeatureIndexBuilder,
    OnConditionFeatureTransform,
    MinibatchKmeansFeatureTransform,
    DummyFeatureTransform,
)

logger = logging.getLogger(__name__)


def get_speaker_list(base_path: Path):
    speakers_path = base_path / "waves-16k"
    if not speakers_path.exists():
        raise FileNotFoundError(f"path {speakers_path} does not exists")
    return [speaker_dir.name for speaker_dir in speakers_path.iterdir() if speaker_dir.is_dir()]


def create_indexes_path(base_path: Path) -> Path:
    indexes_path = base_path / "indexes"
    logger.info("create indexes folder %s", indexes_path)
    indexes_path.mkdir(exist_ok=True)
    return indexes_path


